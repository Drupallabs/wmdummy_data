<?php

use Drupal\Core\Entity\ContentEntityType;
use Drupal\wmdummy_data\Entity\DummyEntity;

/**
 * Install dummy_entity entity type
 */
function wmdummy_data_update_8001(): void
{
    $updateManager = \Drupal::entityDefinitionUpdateManager();

    $entityType = new ContentEntityType([
        'id' => 'dummy_entity',
        'label' => t('Dummy entity'),
        'base_table' => 'dummy_entity',
        'translatable' => false,
        'entity_keys' => [
            'id' => 'did',
        ],
    ]);

    $definitions = DummyEntity::baseFieldDefinitions($entityType);

    $updateManager->installFieldableEntityType($entityType, $definitions);
}

/**
 * Delete all existing dummy data
 */
function wmdummy_data_update_8002(): void
{
    $state = \Drupal::state();
    $entityTypeManager = \Drupal::entityTypeManager();

    foreach ($state->get('wmdummy_data_keys', []) as $key) {
        [, $entityTypeId] = explode('.', $key);

        $storage = $entityTypeManager->getStorage($entityTypeId);
        $ids = $state->get($key);
        if (!$ids) {
            continue;
        }
        $entities = $storage->loadMultiple($ids);

        $storage->delete($entities);
        $state->delete($key);
    }

    $state->delete('wmdummy_data_keys');
}

/**
 * Install dummy_entity base fields
 */
function wmdummy_data_update_8003(): void
{
    $updateManager = \Drupal::entityDefinitionUpdateManager();

    $entityType = new ContentEntityType([
        'id' => 'dummy_entity',
        'label' => t('Dummy entity'),
        'base_table' => 'dummy_entity',
        'translatable' => false,
        'entity_keys' => [
            'id' => 'did',
        ],
    ]);

    $definitions = DummyEntity::baseFieldDefinitions($entityType);

    foreach ($definitions as $name => $definition) {
        $updateManager->installFieldStorageDefinition(
            $name,
            $entityType->id(),
            'wmdummy_data',
            $definition
        );
    }
}
